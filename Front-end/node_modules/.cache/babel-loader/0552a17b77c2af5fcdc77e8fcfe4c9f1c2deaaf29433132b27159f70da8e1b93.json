{"ast":null,"code":"var _jsxFileName = \"G:\\\\IdeaProjects\\\\mami_wata_project\\\\src\\\\components\\\\Stepper.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { TiTick } from \"react-icons/ti\";\nimport Userform from \"./Userform\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Stepper = () => {\n  _s();\n  const steps = [\"Customer Info\", \"Shipping Info\", \"Payment\", \"Step 4\"];\n  const [currentStep, setCurrentStep] = useState(1);\n  const [complete, setComplete] = useState(false);\n\n  // Fonction de rappel pour indiquer que le formulaire est rempli\n  const handleFormFilled = () => {\n    if (currentStep === 1) {\n      setCurrentStep(2); // Passe à l'étape 2 seulement si l'étape actuelle est la première\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center\",\n      children: steps === null || steps === void 0 ? void 0 : steps.map((step, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `step-item ${currentStep === i + 1 && \"active\"} ${(i + 1 < currentStep || complete) && \"complete\"} `,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step\",\n          children: i + 1 < currentStep || complete ? /*#__PURE__*/_jsxDEV(TiTick, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 50\n          }, this) : i + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500\",\n          children: step\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Userform, {\n      onFormFilled: handleFormFilled\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Stepper, \"i9kXEg3jQmMAX86vH0jpJ55lRBc=\");\n_c = Stepper;\nexport default Stepper;\nvar _c;\n$RefreshReg$(_c, \"Stepper\");","map":{"version":3,"names":["React","useState","TiTick","Userform","jsxDEV","_jsxDEV","Fragment","_Fragment","Stepper","_s","steps","currentStep","setCurrentStep","complete","setComplete","handleFormFilled","children","className","map","step","i","size","fileName","_jsxFileName","lineNumber","columnNumber","onFormFilled","_c","$RefreshReg$"],"sources":["G:/IdeaProjects/mami_wata_project/src/components/Stepper.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { TiTick } from \"react-icons/ti\";\r\nimport Userform from \"./Userform\";\r\n\r\nconst Stepper = () => {\r\n  const steps = [\"Customer Info\", \"Shipping Info\", \"Payment\", \"Step 4\"];\r\n  const [currentStep, setCurrentStep] = useState(1);\r\n  const [complete, setComplete] = useState(false);\r\n\r\n  // Fonction de rappel pour indiquer que le formulaire est rempli\r\n  const handleFormFilled = () => {\r\n    if (currentStep === 1) {\r\n      setCurrentStep(2); // Passe à l'étape 2 seulement si l'étape actuelle est la première\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex justify-center\">\r\n        {steps?.map((step, i) => (\r\n          <div\r\n            key={i}\r\n            className={`step-item ${currentStep === i + 1 && \"active\"} ${\r\n              (i + 1 < currentStep || complete) && \"complete\"\r\n            } `}\r\n          >\r\n            <div className=\"step\">\r\n              {i + 1 < currentStep || complete ? <TiTick size={24} /> : i + 1}\r\n            </div>\r\n            <p className=\"text-gray-500\">{step}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <Userform onFormFilled={handleFormFilled} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Stepper;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,gBAAgB;AACvC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,KAAK,GAAG,CAAC,eAAe,EAAE,eAAe,EAAE,SAAS,EAAE,QAAQ,CAAC;EACrE,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;;EAE/C;EACA,MAAMc,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAIJ,WAAW,KAAK,CAAC,EAAE;MACrBC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;IACrB;EACF,CAAC;;EAED,oBACEP,OAAA,CAAAE,SAAA;IAAAS,QAAA,gBACEX,OAAA;MAAKY,SAAS,EAAC,qBAAqB;MAAAD,QAAA,EACjCN,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEQ,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,kBAClBf,OAAA;QAEEY,SAAS,EAAG,aAAYN,WAAW,KAAKS,CAAC,GAAG,CAAC,IAAI,QAAS,IACxD,CAACA,CAAC,GAAG,CAAC,GAAGT,WAAW,IAAIE,QAAQ,KAAK,UACtC,GAAG;QAAAG,QAAA,gBAEJX,OAAA;UAAKY,SAAS,EAAC,MAAM;UAAAD,QAAA,EAClBI,CAAC,GAAG,CAAC,GAAGT,WAAW,IAAIE,QAAQ,gBAAGR,OAAA,CAACH,MAAM;YAACmB,IAAI,EAAE;UAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,GAAGL,CAAC,GAAG;QAAC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5D,CAAC,eACNpB,OAAA;UAAGY,SAAS,EAAC,eAAe;UAAAD,QAAA,EAAEG;QAAI;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GARlCL,CAAC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASH,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNpB,OAAA,CAACF,QAAQ;MAACuB,YAAY,EAAEX;IAAiB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAC5C,CAAC;AAEP,CAAC;AAAChB,EAAA,CAhCID,OAAO;AAAAmB,EAAA,GAAPnB,OAAO;AAkCb,eAAeA,OAAO;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
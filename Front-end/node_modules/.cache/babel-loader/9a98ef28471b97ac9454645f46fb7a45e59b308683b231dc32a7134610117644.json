{"ast":null,"code":"// conditioningData.js\n\n// Importez vos images ici\nimport injectable from './../assets/images/conditioning/injectable.png';\nimport cp from './../assets/images/conditioning/cp.jpg';\nimport gel from './../assets/images/conditioning/gel.jpg';\nimport pommade from './../assets/images/conditioning/pommade.jpg';\nimport sirop from './../assets/images/conditioning/sirop.jpg';\nimport solute from './../assets/images/conditioning/solute.jpg';\nimport suppositoire from './../assets/images/conditioning/suppositoire.jpg';\n\n// Map entre les noms de conditionnement et les images\nconst conditioningImages = {\n  cp: cp,\n  sirop: sirop,\n  pommade: pommade,\n  gel: gel,\n  suppositoire: suppositoire,\n  injectable: injectable,\n  solute: solute\n};\n\n// Données de conditionnement\nconst conditioningData = [{\n  name: 'Cp',\n  image: cp,\n  activated: false\n}, {\n  name: 'Sirop',\n  image: sr,\n  activated: true\n}, {\n  name: 'Pommade',\n  image: cp,\n  activated: true\n}, {\n  name: 'Gel',\n  image: cp,\n  activated: true\n}, {\n  name: 'Suppositoire',\n  image: cp,\n  activated: false\n}, {\n  name: 'Injectable',\n  image: cp,\n  activated: true\n}, {\n  name: 'Solute',\n  image: cp,\n  activated: true\n}];\n\n// Ajoutez le chemin de l'image à chaque objet de conditionnement\nconst conditioningDataWithImages = conditioningData.map(conditioning => ({\n  ...conditioning,\n  image: getImageForConditioning(conditioning.name)\n}));\n\n// Fonction pour obtenir le chemin de l'image en fonction du nom de conditionnement\nfunction getImageForConditioning(conditioningName) {\n  // Convertir le nom en minuscules pour éviter les problèmes de casse\n  const lowercaseName = conditioningName.toLowerCase();\n\n  // Vérifier si l'image existe pour le nom de conditionnement donné\n  if (conditioningImages[lowercaseName]) {\n    return conditioningImages[lowercaseName];\n  }\n  return cp;\n}\n\n// Exportez les données\nexport { conditioningData, conditioningDataWithImages, getImageForConditioning };","map":{"version":3,"names":["injectable","cp","gel","pommade","sirop","solute","suppositoire","conditioningImages","conditioningData","name","image","activated","sr","conditioningDataWithImages","map","conditioning","getImageForConditioning","conditioningName","lowercaseName","toLowerCase"],"sources":["G:/IdeaProjects/mami_wata_project/Front-end/src/components/ConditioningData.js"],"sourcesContent":["// conditioningData.js\r\n\r\n// Importez vos images ici\r\nimport injectable from './../assets/images/conditioning/injectable.png';\r\nimport cp from './../assets/images/conditioning/cp.jpg';\r\nimport gel from './../assets/images/conditioning/gel.jpg';\r\nimport pommade from './../assets/images/conditioning/pommade.jpg';\r\nimport sirop from './../assets/images/conditioning/sirop.jpg';\r\nimport solute from './../assets/images/conditioning/solute.jpg';\r\nimport suppositoire from './../assets/images/conditioning/suppositoire.jpg';\r\n\r\n// Map entre les noms de conditionnement et les images\r\nconst conditioningImages = {\r\n  cp: cp,\r\n  sirop: sirop,\r\n  pommade: pommade,\r\n  gel: gel,\r\n  suppositoire: suppositoire,\r\n  injectable: injectable,\r\n  solute: solute,\r\n};\r\n\r\n// Données de conditionnement\r\nconst conditioningData = [\r\n  { name: 'Cp', image: cp, activated: false },\r\n  { name: 'Sirop', image: sr, activated: true },\r\n  { name: 'Pommade', image: cp, activated: true },\r\n  { name: 'Gel', image: cp, activated: true },\r\n  { name: 'Suppositoire', image: cp, activated: false },\r\n  { name: 'Injectable', image: cp, activated: true },\r\n  { name: 'Solute', image: cp, activated: true },\r\n];\r\n\r\n// Ajoutez le chemin de l'image à chaque objet de conditionnement\r\nconst conditioningDataWithImages = conditioningData.map((conditioning) => ({\r\n  ...conditioning,\r\n  image: getImageForConditioning(conditioning.name),\r\n}));\r\n\r\n// Fonction pour obtenir le chemin de l'image en fonction du nom de conditionnement\r\nfunction getImageForConditioning(conditioningName) {\r\n  // Convertir le nom en minuscules pour éviter les problèmes de casse\r\n  const lowercaseName = conditioningName.toLowerCase();\r\n  \r\n  // Vérifier si l'image existe pour le nom de conditionnement donné\r\n  if (conditioningImages[lowercaseName]) {\r\n    return conditioningImages[lowercaseName];\r\n  }\r\n  return cp;\r\n}\r\n\r\n// Exportez les données\r\nexport { conditioningData, conditioningDataWithImages, getImageForConditioning };\r\n"],"mappings":"AAAA;;AAEA;AACA,OAAOA,UAAU,MAAM,gDAAgD;AACvE,OAAOC,EAAE,MAAM,wCAAwC;AACvD,OAAOC,GAAG,MAAM,yCAAyC;AACzD,OAAOC,OAAO,MAAM,6CAA6C;AACjE,OAAOC,KAAK,MAAM,2CAA2C;AAC7D,OAAOC,MAAM,MAAM,4CAA4C;AAC/D,OAAOC,YAAY,MAAM,kDAAkD;;AAE3E;AACA,MAAMC,kBAAkB,GAAG;EACzBN,EAAE,EAAEA,EAAE;EACNG,KAAK,EAAEA,KAAK;EACZD,OAAO,EAAEA,OAAO;EAChBD,GAAG,EAAEA,GAAG;EACRI,YAAY,EAAEA,YAAY;EAC1BN,UAAU,EAAEA,UAAU;EACtBK,MAAM,EAAEA;AACV,CAAC;;AAED;AACA,MAAMG,gBAAgB,GAAG,CACvB;EAAEC,IAAI,EAAE,IAAI;EAAEC,KAAK,EAAET,EAAE;EAAEU,SAAS,EAAE;AAAM,CAAC,EAC3C;EAAEF,IAAI,EAAE,OAAO;EAAEC,KAAK,EAAEE,EAAE;EAAED,SAAS,EAAE;AAAK,CAAC,EAC7C;EAAEF,IAAI,EAAE,SAAS;EAAEC,KAAK,EAAET,EAAE;EAAEU,SAAS,EAAE;AAAK,CAAC,EAC/C;EAAEF,IAAI,EAAE,KAAK;EAAEC,KAAK,EAAET,EAAE;EAAEU,SAAS,EAAE;AAAK,CAAC,EAC3C;EAAEF,IAAI,EAAE,cAAc;EAAEC,KAAK,EAAET,EAAE;EAAEU,SAAS,EAAE;AAAM,CAAC,EACrD;EAAEF,IAAI,EAAE,YAAY;EAAEC,KAAK,EAAET,EAAE;EAAEU,SAAS,EAAE;AAAK,CAAC,EAClD;EAAEF,IAAI,EAAE,QAAQ;EAAEC,KAAK,EAAET,EAAE;EAAEU,SAAS,EAAE;AAAK,CAAC,CAC/C;;AAED;AACA,MAAME,0BAA0B,GAAGL,gBAAgB,CAACM,GAAG,CAAEC,YAAY,KAAM;EACzE,GAAGA,YAAY;EACfL,KAAK,EAAEM,uBAAuB,CAACD,YAAY,CAACN,IAAI;AAClD,CAAC,CAAC,CAAC;;AAEH;AACA,SAASO,uBAAuBA,CAACC,gBAAgB,EAAE;EACjD;EACA,MAAMC,aAAa,GAAGD,gBAAgB,CAACE,WAAW,CAAC,CAAC;;EAEpD;EACA,IAAIZ,kBAAkB,CAACW,aAAa,CAAC,EAAE;IACrC,OAAOX,kBAAkB,CAACW,aAAa,CAAC;EAC1C;EACA,OAAOjB,EAAE;AACX;;AAEA;AACA,SAASO,gBAAgB,EAAEK,0BAA0B,EAAEG,uBAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}